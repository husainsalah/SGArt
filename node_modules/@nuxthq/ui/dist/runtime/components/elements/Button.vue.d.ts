import type { PropType } from 'vue';
import type { RouteLocationRaw } from 'vue-router';
declare const _default: import("vue").DefineComponent<{
    type: {
        type: StringConstructor;
        default: string;
    };
    block: {
        type: BooleanConstructor;
        default: boolean;
    };
    label: {
        type: StringConstructor;
        default: null;
    };
    loading: {
        type: BooleanConstructor;
        default: boolean;
    };
    disabled: {
        type: BooleanConstructor;
        default: boolean;
    };
    padded: {
        type: BooleanConstructor;
        default: boolean;
    };
    size: {
        type: StringConstructor;
        default: () => any;
        validator(value: string): boolean;
    };
    color: {
        type: StringConstructor;
        default: () => any;
        validator(value: string): boolean;
    };
    variant: {
        type: StringConstructor;
        default: () => any;
        validator(value: string): boolean;
    };
    icon: {
        type: StringConstructor;
        default: null;
    };
    loadingIcon: {
        type: StringConstructor;
        default: () => any;
    };
    leadingIcon: {
        type: StringConstructor;
        default: null;
    };
    trailingIcon: {
        type: StringConstructor;
        default: null;
    };
    trailing: {
        type: BooleanConstructor;
        default: boolean;
    };
    leading: {
        type: BooleanConstructor;
        default: boolean;
    };
    to: {
        type: PropType<RouteLocationRaw>;
        default: null;
    };
    target: {
        type: StringConstructor;
        default: null;
    };
    ariaLabel: {
        type: StringConstructor;
        default: null;
    };
    square: {
        type: BooleanConstructor;
        default: boolean;
    };
    truncate: {
        type: BooleanConstructor;
        default: boolean;
    };
    ui: {
        type: PropType<any>;
        default: () => any;
    };
}, {
    buttonIs: import("vue").ComputedRef<"button" | "NuxtLink">;
    buttonProps: import("vue").ComputedRef<{
        to: RouteLocationRaw;
        target: string;
        disabled?: undefined;
        type?: undefined;
    } | {
        disabled: boolean;
        type: string;
        to?: undefined;
        target?: undefined;
    }>;
    isLeading: import("vue").ComputedRef<string | true>;
    isTrailing: import("vue").ComputedRef<string | true>;
    isSquare: import("vue").ComputedRef<boolean>;
    buttonClass: import("vue").ComputedRef<any>;
    leadingIconName: import("vue").ComputedRef<string | undefined>;
    trailingIconName: import("vue").ComputedRef<string | undefined>;
    leadingIconClass: import("vue").ComputedRef<any>;
    trailingIconClass: import("vue").ComputedRef<any>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    type: {
        type: StringConstructor;
        default: string;
    };
    block: {
        type: BooleanConstructor;
        default: boolean;
    };
    label: {
        type: StringConstructor;
        default: null;
    };
    loading: {
        type: BooleanConstructor;
        default: boolean;
    };
    disabled: {
        type: BooleanConstructor;
        default: boolean;
    };
    padded: {
        type: BooleanConstructor;
        default: boolean;
    };
    size: {
        type: StringConstructor;
        default: () => any;
        validator(value: string): boolean;
    };
    color: {
        type: StringConstructor;
        default: () => any;
        validator(value: string): boolean;
    };
    variant: {
        type: StringConstructor;
        default: () => any;
        validator(value: string): boolean;
    };
    icon: {
        type: StringConstructor;
        default: null;
    };
    loadingIcon: {
        type: StringConstructor;
        default: () => any;
    };
    leadingIcon: {
        type: StringConstructor;
        default: null;
    };
    trailingIcon: {
        type: StringConstructor;
        default: null;
    };
    trailing: {
        type: BooleanConstructor;
        default: boolean;
    };
    leading: {
        type: BooleanConstructor;
        default: boolean;
    };
    to: {
        type: PropType<RouteLocationRaw>;
        default: null;
    };
    target: {
        type: StringConstructor;
        default: null;
    };
    ariaLabel: {
        type: StringConstructor;
        default: null;
    };
    square: {
        type: BooleanConstructor;
        default: boolean;
    };
    truncate: {
        type: BooleanConstructor;
        default: boolean;
    };
    ui: {
        type: PropType<any>;
        default: () => any;
    };
}>>, {
    icon: string;
    color: string;
    ui: any;
    label: string;
    type: string;
    block: boolean;
    loading: boolean;
    disabled: boolean;
    size: string;
    variant: string;
    leadingIcon: string;
    trailingIcon: string;
    trailing: boolean;
    to: RouteLocationRaw;
    target: string;
    square: boolean;
    truncate: boolean;
    padded: boolean;
    loadingIcon: string;
    leading: boolean;
    ariaLabel: string;
}, {}>;
export default _default;
